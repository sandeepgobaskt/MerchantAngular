{"version":3,"sources":["./src/app/login/login/login.component.html","./src/app/login/signup-complete/signup-complete.component.html","./src/app/login/signup/signup.component.html","./src/app/login/index.ts","./src/app/login/login.route.ts","./src/app/login/login/login.component.css","./src/app/login/login/login.component.ts","./src/app/login/signup-complete/signup-complete.component.scss","./src/app/login/signup-complete/signup-complete.component.ts","./src/app/login/signup/signup.component.scss","./src/app/login/signup/signup.component.ts"],"names":[],"mappings":"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","file":"login-index-es2015.js","sourcesContent":["export default \"<header>\\n    <nav class=\\\"navbar navbar-expand-lg navbar-light container mt-0\\\">\\n        <div class=\\\"d-flex flex-grow-1\\\">\\n            <span class=\\\"w-100 d-lg-none d-block\\\">\\n                <!-- hidden spacer to center brand on mobile -->\\n            </span>\\n            <a class=\\\"navbar-brand\\\">\\n                <img class=\\\"img-fluid\\\" src=\\\"assets/images/logo.png\\\" alt=\\\"Theme-Logo\\\" />\\n            </a>\\n            <ul class=\\\"navbar-nav ml-auto flex-nowrap \\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a [routerLink]=\\\"['/payment/subscription']\\\" class=\\\"nav-link  menu-item nav-active\\\">Subscription\\n                        Plans</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a href=\\\"http://consumer.gobaskt.com/\\\" class=\\\"nav-link  menu-item\\\">Consumer Portal</a>\\n                </li>\\n            </ul>\\n            <!-- <div class=\\\"w-100 text-right\\\">\\n                <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\">\\n                    <span class=\\\"navbar-toggler-icon\\\"></span>\\n                </button>\\n            </div> -->\\n        </div>\\n        <!-- <div class=\\\"collapse navbar-collapse flex-grow-1 text-right\\\" id=\\\"myNavbar\\\">\\n            <ul class=\\\"navbar-nav ml-auto flex-nowrap\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a [routerLink]=\\\"['/payment/subscription']\\\" class=\\\"nav-link  menu-item nav-active\\\">Subscription\\n                        Plans</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a [routerLink]=\\\"['/consumer/home']\\\" class=\\\"nav-link  menu-item\\\">Consumer Portal</a>\\n                </li>\\n            </ul>\\n        </div> -->\\n    </nav>\\n</header>\\n<div class=\\\"pt-3 login-bg\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"row m-0\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <img class=\\\"img-fluid max-165\\\" src=\\\"assets/images/login-bg.png\\\" alt=\\\"signup\\\" />\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"panel panel-default cus-bg\\\">\\n                    <div>\\n                        <h3 class=\\\"title-partner\\\">Partner Login</h3>\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <form class=\\\"form-horizontal\\\" role=\\\"form\\\" [formGroup]=\\\"merchantLoginForm\\\"\\n                            (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <input type=\\\"fname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"emailId\\\"\\n                                        id=\\\"inputfName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.emailId.errors }\\\"\\n                                        placeholder=\\\"Email Id\\\" required pattern=\\\"/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*$/\\\">\\n                                    <span class=\\\"invalid-feedback cust-feedback-align\\\"\\n                                        *ngIf=\\\"f.emailId.errors?.required\\\">Enter\\n                                        Email Id</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <input type=\\\"password\\\" class=\\\"form-control inpt\\\" formControlName=\\\"password\\\"\\n                                        id=\\\"inputlName\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\"\\n                                        placeholder=\\\"Password\\\" required >\\n                                    <span class=\\\"invalid-feedback cust-feedback-align\\\"\\n                                        *ngIf=\\\"f.password.errors?.required\\\">Enter your\\n                                        Password</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group last\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <button type=\\\"submit\\\" class=\\\"col-sm-12 btn-clr-blue btn btn-sm\\\">\\n                                        Sign In</button>\\n                                    <div *ngIf=\\\"errMsg\\\">\\n                                        <p class=\\\"mail-already-exist\\\">Invalid Credentials!</p>\\n                                    </div>\\n                                    <p class=\\\"text-center pt-3\\\"> Already a partner? If not,  <span\\n                                            class=\\\"f-bold clr-blue cursor-pointer\\\"\\n                                            [routerLink]=\\\"['/auth/signup','merchant']\\\">Click\\n                                            Here</span></p>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","export default \"<div class=\\\"pt-3 signup-bg\\\">\\n    <div class=\\\"container\\\">\\n        <div class=\\\"col-md-12 text-center pb-80\\\">\\n            <!-- <span class=\\\"f-18 mr-10\\\">Make</span> -->\\n            <h3 class=\\\"d-inline f-bold f-28\\\">Your Brand known to All</h3>\\n            <p class=\\\"f-18\\\">Partner with us today & increase your reach <span [routerLink]=\\\"['/auth/login']\\\"\\n                    class=\\\"cursor-pointer f-bold clr-blue\\\">Click Here</span></p>\\n        </div>\\n        <div class=\\\"row m-0\\\">\\n            <div class=\\\"col-md-6\\\">\\n                <img class=\\\"img-fluid h-20\\\" src=\\\"assets/images/signup_img.png\\\" alt=\\\"signup\\\" />\\n            </div>\\n            <div class=\\\"col-md-6\\\">\\n                <div class=\\\"panel panel-default cus-bg\\\">\\n                    <div class=\\\"partner-login\\\">\\n                        <h3 class=\\\"title-partner\\\">Consumer Sign Up Complete</h3>\\n                        <!-- <p class=\\\"f-15\\\">Quick 4 step form, helping you save your time</p> -->\\n                    </div>\\n                    <div class=\\\"panel-body\\\">\\n                        <form class=\\\"form-horizontal\\\" role=\\\"form\\\" [formGroup]=\\\"completeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <input type=\\\"fname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"primaryMobile\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.primaryMobile.errors }\\\"\\n                                        placeholder=\\\"Mobile Number\\\" >\\n                                    <span class=\\\"invalid-feedback cust-feedback-align\\\"\\n                                        *ngIf=\\\"f.primaryMobile.errors?.required\\\">Enter Mobile Number</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <input type=\\\"fname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"secondaryMobile\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.secondaryMobile.errors }\\\" placeholder=\\\"Alternate Mobile Number\\\">\\n                                    <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.secondaryMobile.errors?.required\\\">Enter your alternate Mobile\\n                                        Number</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <input type=\\\"fname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"address\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.address.errors }\\\" placeholder=\\\"Address\\\">\\n                                    <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.address.errors?.required\\\">Enter your\\n                                        Address</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <input type=\\\"fname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"city\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.city.errors }\\\" placeholder=\\\"City\\\">\\n                                    <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.city.errors?.required\\\">Enter your\\n                                        City</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <input type=\\\"fname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"state\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.state.errors }\\\" placeholder=\\\"State\\\">\\n                                    <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.state.errors?.required\\\">Enter your\\n                                        State</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <input type=\\\"number\\\" class=\\\"form-control inpt\\\" formControlName=\\\"zipcode\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.zipcode.errors }\\\" placeholder=\\\"Pincode\\\">\\n                                    <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.zipcode.errors?.required\\\">Enter your\\n                                        Pincode</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <input type=\\\"text\\\" class=\\\"form-control inpt\\\" formControlName=\\\"dateOfBirth\\\"\\n                                        [ngClass]=\\\"{ 'is-invalid': submitted && f.dateOfBirth.errors }\\\" placeholder=\\\"Date Of Birth\\\">\\n                                    <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.dateOfBirth.errors?.required\\\">Enter your\\n                                        Date of Birth</span>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"form-group last\\\">\\n                                <div class=\\\"col-sm-12\\\">\\n                                    <button type=\\\"submit\\\" class=\\\"col-sm-12 btn-clr-blue btn btn-sm\\\">\\n                                      Complete Sign Up</button>\\n                                    <p class=\\\"text-center pt-3\\\">Already a member?<a [routerLink]=\\\"['auth/login']\\\"\\n                                            class=\\\"cursor-pointer f-bold clr-blue\\\">Click Here</a></p>\\n                                </div>\\n                            </div>\\n                        </form>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","export default \"<div class=\\\"pt-3 signup-bg\\\" *ngIf=\\\"category === 'consumer'\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"col-md-12 text-center pb-80\\\">\\n      <!-- <span class=\\\"f-18 mr-10\\\">Make</span> -->\\n      <h3 class=\\\"d-inline f-bold f-28\\\">Make Your Brand known to All</h3>\\n      <p class=\\\"f-18\\\">Discover Great deals quickly and save time money and efforts while engaging with business </p>\\n    </div>\\n    <div class=\\\"row m-0\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <img class=\\\"img-fluid h-20\\\" src=\\\"assets/images/signup_img.png\\\" alt=\\\"signup\\\" />\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"panel panel-default cus-bg\\\">\\n          <div class=\\\"partner-login\\\">\\n            <h3 class=\\\"title-partner\\\">Sign Up as New User</h3>\\n            <p class=\\\"f-15\\\">Quick 4 step form, helping you save your time</p>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <form class=\\\"form-horizontal\\\" role=\\\"form\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"fname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"firstName\\\" id=\\\"inputfName\\\"\\n                    maxlength=\\\"50\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.firstName.errors }\\\"\\n                    placeholder=\\\"First name\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.firstName.errors?.required\\\">Enter your\\n                    name</span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"lname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"lastName\\\" id=\\\"inputlName\\\"\\n                    maxlength=\\\"50\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.lastName.errors }\\\" placeholder=\\\"Last name\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.lastName.errors?.required\\\">Enter your\\n                    name</span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"email\\\" class=\\\"form-control inpt\\\" formControlName=\\\"emailId\\\" id=\\\"inputEmail\\\" maxlength=\\\"50\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && f.emailId.errors }\\\" placeholder=\\\"Enter your email\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.emailId.errors?.required\\\">Enter proper\\n                    email\\n                    id</span>\\n\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"password\\\" class=\\\"form-control inpt\\\" formControlName=\\\"password\\\" id=\\\"inputPassword\\\"\\n                    maxlength=\\\"10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && f.password.errors }\\\" placeholder=\\\"Password\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.password.errors?.required\\\">Enter valid\\n                    password</span>\\n                </div>\\n              </div>\\n              <!--  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"f.emailAlredyExist.errors?.required\\\">Enter valid\\n                password</span> -->\\n              <div class=\\\"form-group last\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <button type=\\\"submit\\\" class=\\\"col-sm-12 btn-clr-blue btn btn-sm\\\">\\n                    Sign Up</button>\\n                  <div *ngIf=\\\"errorMsg\\\">\\n                    <p class=\\\"mail-already-exist\\\">Your Email {{errorMsg}}</p>\\n                  </div>\\n                  <div *ngIf=\\\"successMsg\\\">\\n                    <p class=\\\"mail-sent\\\">{{successMsg}}</p>\\n                  </div>\\n                  <p class=\\\"text-center pt-3\\\">Already has a merchant account with us? <a [routerLink]=\\\"['/auth/login']\\\"\\n                      class=\\\"cursor-pointer f-bold clr-blue\\\">Click Here</a> to login</p>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"pt-3 signup-bg\\\" *ngIf=\\\"category === 'merchant'\\\">\\n  <div class=\\\"container\\\">\\n    <div class=\\\"col-md-12 text-center pb-80\\\">\\n      <!-- <span class=\\\"f-18 mr-10\\\">Make</span> -->\\n      <h3 class=\\\"d-inline f-bold\\\" style=\\\"font-size: 20px;\\\">Make Your Brand known to customer in your locality</h3>\\n      <p class=\\\"f-18\\\">Partner with us today & increase your reach.</p>\\n    </div>\\n    <div class=\\\"row m-0\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <img class=\\\"img-fluid h-20\\\" src=\\\"assets/images/signup_img.png\\\" alt=\\\"signup\\\" />\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"panel panel-default cus-bg\\\">\\n          <div class=\\\"partner-login\\\">\\n            <h3 class=\\\"title-partner\\\">Sign Up as a New Merchant</h3>\\n            <!-- <p class=\\\"f-15\\\">Quick 4 step form, helping you save your time</p> -->\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <form class=\\\"form-horizontal\\\" role=\\\"form\\\" [formGroup]=\\\"merchantRegisterForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"fname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"bpprimaryContactName\\\" id=\\\"inputfName\\\"\\n                    maxlength=\\\"50\\\" [ngClass]=\\\"{ 'is-invalid': submitted && g.bpprimaryContactName.errors }\\\"\\n                    placeholder=\\\"First name\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\"\\n                    *ngIf=\\\"g.bpprimaryContactName.errors?.required\\\">Enter your\\n                    First Name</span>\\n                </div>\\n              </div>\\n              <!-- <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"fname\\\" class=\\\"form-control inpt\\\" formControlName=\\\"bpprimaryContactName\\\" id=\\\"inputfName\\\"\\n                    maxlength=\\\"50\\\" [ngClass]=\\\"{ 'is-invalid': submitted && g.bpprimaryContactName.errors }\\\"\\n                    placeholder=\\\"Last Name\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\"\\n                    *ngIf=\\\"g.bpprimaryContactName.errors?.required\\\">Enter your\\n                    Last Name</span>\\n                </div>\\n              </div> -->\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control inpt\\\" formControlName=\\\"bpname\\\" id=\\\"inputlName\\\" maxlength=\\\"50\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && g.bpname.errors }\\\" placeholder=\\\"Business Name\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"g.bpname.errors?.required\\\">Enter your\\n                    Business Name</span>\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input [class.is-invalid]=\\\"merchantRegisterForm.get('emailId').invalid && merchantRegisterForm.get('emailId').touched\\\" type=\\\"email\\\" class=\\\"form-control inpt\\\" formControlName=\\\"emailId\\\" id=\\\"inputEmail\\\" maxlength=\\\"50\\\"\\n                      placeholder=\\\"Business Email\\\"/>\\n                      <div *ngIf=\\\"(primEmail.invalid && primEmail.touched) || primEmail.dirty\\\">\\n                        <small *ngIf=\\\"primEmail.errors?.required\\\" class=\\\"text-danger\\\">Email is required</small>\\n                        <!--question mark(?) is a safe navigation operator-->\\n                        <small *ngIf=\\\"primEmail.errors?.pattern\\\" class=\\\"text-danger\\\">Please provide a valid email address</small>\\n                      </div>\\n                  <!-- <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"g.emailId.errors?.required\\\">Enter proper\\n                    email\\n                    id</span> -->\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input [class.is-invalid]=\\\"merchantRegisterForm.get('password').invalid && merchantRegisterForm.get('password').touched\\\" type=\\\"password\\\" class=\\\"form-control inpt\\\" formControlName=\\\"password\\\" id=\\\"inputEmail\\\" maxlength=\\\"50\\\"\\n                      placeholder=\\\"Password\\\"/>\\n                      <div *ngIf=\\\"(passVal.invalid && passVal.touched) || passVal.dirty\\\">\\n                        <small *ngIf=\\\"passVal.errors?.required\\\" class=\\\"text-danger\\\">Password is required</small>\\n                        <!--question mark(?) is a safe navigation operator-->\\n                        <small *ngIf=\\\"passVal.errors?.pattern\\\" class=\\\"text-danger\\\">At least 8 characters in length,Lowercase letters,\\n                          Uppercase letters,\\n                          Numbers,\\n                          Special characters</small>\\n                      </div>\\n                  <!-- <input type=\\\"password\\\" class=\\\"form-control inpt\\\" formControlName=\\\"password\\\" id=\\\"inputPassword\\\"\\n                    maxlength=\\\"10\\\" [ngClass]=\\\"{ 'is-invalid': submitted && g.password.errors }\\\" placeholder=\\\"Password\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"g.password.errors?.required\\\">Enter Valid\\n                    Password\\n                  </span> -->\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input [class.is-invalid]=\\\"merchantRegisterForm.get('bpcity').invalid && merchantRegisterForm.get('bpcity').touched\\\" type=\\\"text\\\" class=\\\"form-control inpt\\\" formControlName=\\\"bpcity\\\" id=\\\"inputCity\\\" maxlength=\\\"25\\\"\\n                  placeholder=\\\"City\\\"/>\\n                  <div *ngIf=\\\"(cityVal.invalid && cityVal.touched) || cityVal.dirty\\\">\\n                    <small *ngIf=\\\"cityVal.errors?.required\\\" class=\\\"text-danger\\\">City is required</small>\\n                    <!--question mark(?) is a safe navigation operator-->\\n                    <small *ngIf=\\\"cityVal.errors?.pattern\\\" class=\\\"text-danger\\\">Please provide a valid City</small>\\n                  </div>\\n                  <!-- <input type=\\\"text\\\" class=\\\"form-control inpt\\\" formControlName=\\\"bpcity\\\" id=\\\"inputCity\\\" maxlength=\\\"50\\\"\\n                    [ngClass]=\\\"{ 'is-invalid': submitted && g.bpcity.errors }\\\" placeholder=\\\"City\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"g.bpcity.errors?.required\\\">Enter valid\\n                    City</span> -->\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input [class.is-invalid]=\\\"merchantRegisterForm.get('bpzipcode').invalid && merchantRegisterForm.get('bpzipcode').touched\\\" type=\\\"text\\\" class=\\\"form-control inpt\\\" formControlName=\\\"bpzipcode\\\" id=\\\"inputZipCode\\\" maxlength=\\\"6\\\"\\n                      placeholder=\\\"ZipCode\\\"/>\\n                      <div *ngIf=\\\"(zipVal.invalid && zipVal.touched) || zipVal.dirty\\\">\\n                        <small *ngIf=\\\"zipVal.errors?.required\\\" class=\\\"text-danger\\\">ZipCode is required</small>\\n                        <!--question mark(?) is a safe navigation operator-->\\n                        <small *ngIf=\\\"zipVal.errors?.pattern\\\" class=\\\"text-danger\\\">Please provide a valid ZipCode</small>\\n                      </div>\\n\\n                  <!-- <input type=\\\"text\\\" class=\\\"form-control inpt\\\" formControlName=\\\"bpzipcode\\\" id=\\\"inputZipCode\\\"\\n                    maxlength=\\\"6\\\" [ngClass]=\\\"{ 'is-invalid': submitted && g.bpzipcode.errors }\\\" placeholder=\\\"Zip Code\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"g.bpzipcode.errors?.required\\\">Enter valid\\n                    Zip Code</span> -->\\n                </div>\\n              </div>\\n              <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <input [class.is-invalid]=\\\"merchantRegisterForm.get('bpwebsite').invalid && merchantRegisterForm.get('bpwebsite').touched\\\" type=\\\"text\\\" class=\\\"form-control inpt\\\" formControlName=\\\"bpwebsite\\\" id=\\\"inputwebsite\\\" maxlength=\\\"50\\\"\\n                      placeholder=\\\"WebSite\\\"/>\\n                      <div *ngIf=\\\"(webVal.invalid && webVal.touched) || webVal.dirty\\\">\\n                        <small *ngIf=\\\"webVal.errors?.required\\\" class=\\\"text-danger\\\">WebSite is required</small>\\n                        <!--question mark(?) is a safe navigation operator-->\\n                        <small *ngIf=\\\"webVal.errors?.pattern\\\" class=\\\"text-danger\\\">Please provide a valid Website Name</small>\\n                      </div>\\n                  <!-- <input type=\\\"text\\\" class=\\\"form-control inpt\\\" formControlName=\\\"bpwebsite\\\" id=\\\"inputwebsite\\\"\\n                    maxlength=\\\"50\\\" [ngClass]=\\\"{ 'is-invalid': submitted && g.bpwebsite.errors }\\\" placeholder=\\\"WebSite\\\">\\n                  <span class=\\\"invalid-feedback cust-feedback-align\\\" *ngIf=\\\"g.bpwebsite.errors?.required\\\">Enter valid\\n                    Website</span> -->\\n                </div>\\n              </div>\\n              <div class=\\\"form-group last\\\">\\n                <div class=\\\"col-sm-12\\\">\\n                  <button type=\\\"submit\\\" class=\\\"col-sm-12 btn-clr-blue btn btn-sm\\\">\\n                    Sign Up</button>\\n                  <div *ngIf=\\\"errorMsg\\\">\\n                    <p class=\\\"mail-already-exist\\\">Your Email {{errorMsg}}</p>\\n                  </div>\\n                  <div *ngIf=\\\"errMsg\\\">\\n                    <p class=\\\"mail-already-exist\\\">{{errMsg}}</p>\\n                  </div>\\n                  <div *ngIf=\\\"successMsg\\\">\\n                    <p class=\\\"mail-sent\\\">{{successMsg}}</p>\\n                  </div>\\n                  <p class=\\\"text-center pt-3\\\">Already has a merchant account with us? <a [routerLink]=\\\"['/auth/login']\\\"\\n                      class=\\\"cursor-pointer f-bold clr-blue\\\">Click Here</a> to Login</p>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<!-- <div *ngIf=\\\"pass\\\" style=\\\"display: none;\\\">\\n  <app-signup-complete [email]=\\\"email\\\"></app-signup-complete>\\n</div> -->\"","import { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LoginRoutingModule } from './login.route';\r\nimport { SignupCompleteComponent } from './signup-complete/signup-complete.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        LoginComponent,\r\n        SignupComponent,\r\n        SignupCompleteComponent\r\n    ],\r\n    imports: [\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        CommonModule,\r\n        LoginRoutingModule,\r\n    ],\r\n    exports: [],\r\n    providers: [],\r\n})\r\nexport class LoginModule { }\r\n","\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { SignupCompleteComponent } from './signup-complete/signup-complete.component';\r\n\r\nexport const LoginRoutes = [\r\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'signup/:category', component: SignupComponent },\r\n    { path: 'complete', component: SignupCompleteComponent}\r\n];\r\n\r\n@NgModule({\r\n    imports: [RouterModule.forChild(LoginRoutes)],\r\n    exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","export default \".panel.panel-default {\\n    padding: 28px 70px;\\n    margin-left: 25px;\\n    margin-top: 30%;\\n    border-radius: 15.4px;\\n}\\n\\n.partner-login {\\n    padding-left: 15px;\\n}\\n\\n.title-partner {\\n    font-weight: 600;\\n}\\n\\n.inpt {\\n    border: none;\\n    border-radius: 0;\\n    box-shadow: none;\\n    border-bottom: 1px solid #dcdcdc;\\n    padding-left: 0;\\n}\\n\\n.max-165 {\\n    max-width: 165%;\\n}\\n\\n.mail-already-exist {\\n    text-align: center;\\n    padding-top: 16px;\\n    color: #f00;\\n    font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsZUFBZTtJQUNmLHFCQUFxQjtBQUN6Qjs7QUFFQTtJQUNJLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixnQkFBZ0I7SUFDaEIsZ0JBQWdCO0lBQ2hCLGdDQUFnQztJQUNoQyxlQUFlO0FBQ25COztBQUVBO0lBQ0ksZUFBZTtBQUNuQjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixpQkFBaUI7SUFDakIsV0FBVztJQUNYLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucGFuZWwucGFuZWwtZGVmYXVsdCB7XG4gICAgcGFkZGluZzogMjhweCA3MHB4O1xuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xuICAgIG1hcmdpbi10b3A6IDMwJTtcbiAgICBib3JkZXItcmFkaXVzOiAxNS40cHg7XG59XG5cbi5wYXJ0bmVyLWxvZ2luIHtcbiAgICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG5cbi50aXRsZS1wYXJ0bmVyIHtcbiAgICBmb250LXdlaWdodDogNjAwO1xufVxuXG4uaW5wdCB7XG4gICAgYm9yZGVyOiBub25lO1xuICAgIGJvcmRlci1yYWRpdXM6IDA7XG4gICAgYm94LXNoYWRvdzogbm9uZTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2RjZGNkYztcbiAgICBwYWRkaW5nLWxlZnQ6IDA7XG59XG5cbi5tYXgtMTY1IHtcbiAgICBtYXgtd2lkdGg6IDE2NSU7XG59XG5cbi5tYWlsLWFscmVhZHktZXhpc3Qge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogMTZweDtcbiAgICBjb2xvcjogI2YwMDtcbiAgICBmb250LXdlaWdodDogNjAwO1xufSJdfQ== */\"","import { Component, OnInit, Inject, OnDestroy, Renderer2 } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport { HttpService } from 'src/app/shared/core/service/http.service';\nimport { loginParams } from 'src/app/shared/core/models/common.models';\nimport { HelperService } from 'src/app/shared/core/service/helper.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  bgClass = 'home';\n  merchantLoginForm: FormGroup;\n  submitted = false;\n  returnUrl: string;\n  loading = false;\n  error = '';\n  loginData = new loginParams();\n  userName: any;\n  errMsg: any;\n  bpname: any;\n\n  // tslint:disable-next-line:max-line-length\n  constructor(@Inject(DOCUMENT) private document: Document, private renderer: Renderer2, public httpService: HttpService, private formBuilder: FormBuilder, private router: Router, private helperService: HelperService) { }\n\n  ngOnInit() {\n    this.renderer.addClass(this.document.body, 'embedded-body');\n    this.buildMerchantLoginForm();\n  }\n  ngOnDestroy() {\n    this.renderer.removeClass(document.body, 'embedded-body');\n  }\n  get f() { return this.merchantLoginForm.controls; }\n  buildMerchantLoginForm() {\n    this.merchantLoginForm = this.formBuilder.group({\n      emailId: ['', Validators.required],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n    });\n  }\n  onSubmit() {\n    // if (this.merchantLoginForm.invalid) {\n    //   console.log('In');\n    //   return;\n    // }\n    this.loginData.emailId = this.merchantLoginForm.value.emailId;\n    this.loginData.password = this.merchantLoginForm.value.password;\n    this.httpService.merchantLogin(this.loginData).subscribe((response: any) => {\n      console.log(response);\n      if (response.status === 200) {\n        if (response.body) {\n          console.log(response.body.data.bpprimaryContactName);\n          this.router.navigate(['/merchant/draft-offer']);\n          // this.router.navigate(['/merchant/create-offer']);\n          this.userName = response.body.data.bpprimaryContactName;\n          this.bpname = response.body.data.bpname;\n          this.helperService.setToLocalStorage('userName', this.userName);\n          this.helperService.setToLocalStorage('bpname', this.bpname);\n        }\n      }\n    }, error => {\n      console.log(error);\n      this.errMsg = error.error.message;\n    });\n  }\n}\n","export default \".panel.panel-default {\\n  padding: 28px;\\n  margin-left: 68px;\\n  border-radius: 15.4px;\\n}\\n\\n.partner-login {\\n  padding-left: 15px;\\n}\\n\\n.title-partner {\\n  font-weight: 600;\\n}\\n\\n.inpt {\\n  border: none;\\n  border-radius: 0;\\n  box-shadow: none;\\n  border-bottom: 1px solid #dcdcdc;\\n  padding-left: 0;\\n}\\n\\n.form-control.is-invalid:focus,\\n.was-validated .form-control:invalid:focus {\\n  box-shadow: none;\\n}\\n\\n.mail-already-exist {\\n  text-align: center;\\n  padding-top: 16px;\\n  color: #f00;\\n  font-weight: 600;\\n}\\n\\n.mail-sent {\\n  text-align: center;\\n  padding-top: 16px;\\n  color: green;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vc2lnbnVwLWNvbXBsZXRlL0Q6XFxBbmd1bGFyXFxHb0Jhc2t0X01lcmNoYW50LW1hc3Rlci9zcmNcXGFwcFxcbG9naW5cXHNpZ251cC1jb21wbGV0ZVxcc2lnbnVwLWNvbXBsZXRlLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9sb2dpbi9zaWdudXAtY29tcGxldGUvc2lnbnVwLWNvbXBsZXRlLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGlCQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQ0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTs7RUFFSSxnQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vc2lnbnVwLWNvbXBsZXRlL3NpZ251cC1jb21wbGV0ZS5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYW5lbC5wYW5lbC1kZWZhdWx0IHtcclxuICAgIHBhZGRpbmc6IDI4cHg7XHJcbiAgICBtYXJnaW4tbGVmdDogNjhweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDE1LjRweDtcclxufVxyXG5cclxuLnBhcnRuZXItbG9naW4ge1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG59XHJcblxyXG4udGl0bGUtcGFydG5lciB7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4uaW5wdCB7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiAwO1xyXG4gICAgYm94LXNoYWRvdzogbm9uZTtcclxuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGNkY2RjO1xyXG4gICAgcGFkZGluZy1sZWZ0OiAwO1xyXG59XHJcblxyXG4uZm9ybS1jb250cm9sLmlzLWludmFsaWQ6Zm9jdXMsXHJcbi53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2w6aW52YWxpZDpmb2N1cyB7XHJcbiAgICBib3gtc2hhZG93OiBub25lO1xyXG59XHJcblxyXG4ubWFpbC1hbHJlYWR5LWV4aXN0IHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAxNnB4O1xyXG4gICAgY29sb3I6ICNmMDA7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4ubWFpbC1zZW50IHtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiAxNnB4O1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcclxufSIsIi5wYW5lbC5wYW5lbC1kZWZhdWx0IHtcbiAgcGFkZGluZzogMjhweDtcbiAgbWFyZ2luLWxlZnQ6IDY4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDE1LjRweDtcbn1cblxuLnBhcnRuZXItbG9naW4ge1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG5cbi50aXRsZS1wYXJ0bmVyIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLmlucHQge1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGNkY2RjO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG59XG5cbi5mb3JtLWNvbnRyb2wuaXMtaW52YWxpZDpmb2N1cyxcbi53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2w6aW52YWxpZDpmb2N1cyB7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG5cbi5tYWlsLWFscmVhZHktZXhpc3Qge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAxNnB4O1xuICBjb2xvcjogI2YwMDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLm1haWwtc2VudCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy10b3A6IDE2cHg7XG4gIGNvbG9yOiBncmVlbjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\"","import { Component, OnInit, Input } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { HttpService } from '../../shared/core/service/http.service';\nimport { Router } from '@angular/router';\nimport { CompleteParams } from '../../shared/core/models/common.models';\nimport { HelperService } from 'src/app/shared/core/service/helper.service';\n\n@Component({\n  selector: 'app-signup-complete',\n  templateUrl: './signup-complete.component.html',\n  styleUrls: ['./signup-complete.component.scss']\n})\nexport class SignupCompleteComponent implements OnInit {\n  completeForm: FormGroup;\n  submitted = false;\n  registraionSuccess = false;\n  registrationMsg: any;\n  completeData = new CompleteParams();\n  email: any;\n  id: any;\n  // tslint:disable-next-line:max-line-length\n  constructor(private formBuilder: FormBuilder, private httpService: HttpService, private router: Router, private helperService: HelperService) { }\n\n  ngOnInit() {\n    this.email = this.helperService.getFromLocalStorage('email');\n    this.buildRegistraionForm();\n    this.getEmail();\n  }\n  get f() { return this.completeForm.controls; }\n  buildRegistraionForm() {\n    this.completeForm = this.formBuilder.group({\n      primaryMobile: ['', Validators.required],\n      secondaryMobile: ['', Validators.required],\n      address: ['', Validators.required],\n      state: ['', Validators.required],\n      city: ['', Validators.required],\n      zipcode: ['', Validators.required],\n      dateOfBirth: ['', Validators.required],\n    });\n  }\n  getEmail() {\n    this.httpService.getId(this.email).subscribe((response: any) => {\n      console.log(response);\n      if (response.status === 202) {\n        if (response.body) {\n          if (response.body.responseData.length !== 0) {\n            this.id = response.body.responseData.id;\n          }\n        }\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.completeForm.invalid) {\n      return;\n    }\n    this.completeData.id = this.id;\n    this.completeData.primaryMobile = this.completeForm.value.primaryMobile;\n    this.completeData.secondaryMobile = this.completeForm.value.secondaryMobile;\n    this.completeData.address = this.completeForm.value.address;\n    this.completeData.state = this.completeForm.value.state;\n    this.completeData.city = this.completeForm.value.city;\n    this.completeData.zipcode = this.completeForm.value.zipcode;\n    this.completeData.dateOfBirth = this.completeForm.value.dateOfBirth;\n    console.log(this.completeData);\n    this.httpService.postCreateUser(this.completeData).subscribe((response: any) => {\n      console.log(response);\n      if (response.status === 202) {\n        this.router.navigate(['/merchant/dashboard']);\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n}\n","export default \".panel.panel-default {\\n  padding: 28px;\\n  margin-left: 68px;\\n  border-radius: 15.4px;\\n}\\n\\n.partner-login {\\n  padding-left: 15px;\\n}\\n\\n.title-partner {\\n  font-weight: 600;\\n}\\n\\n.inpt {\\n  border: none;\\n  border-radius: 0;\\n  box-shadow: none;\\n  border-bottom: 1px solid #dcdcdc;\\n  padding-left: 0;\\n}\\n\\n.form-control.is-invalid:focus,\\n.was-validated .form-control:invalid:focus {\\n  box-shadow: none;\\n}\\n\\n.mail-already-exist {\\n  text-align: center;\\n  padding-top: 16px;\\n  color: #f00;\\n  font-weight: 600;\\n}\\n\\n.mail-sent {\\n  text-align: center;\\n  padding-top: 16px;\\n  color: green;\\n  font-weight: 600;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vc2lnbnVwL0Q6XFxBbmd1bGFyXFxHb0Jhc2t0X01lcmNoYW50LW1hc3Rlci9zcmNcXGFwcFxcbG9naW5cXHNpZ251cFxcc2lnbnVwLmNvbXBvbmVudC5zY3NzIiwic3JjL2FwcC9sb2dpbi9zaWdudXAvc2lnbnVwLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0ksYUFBQTtFQUNBLGlCQUFBO0VBQ0EscUJBQUE7QUNDSjs7QURFQTtFQUNJLGtCQUFBO0FDQ0o7O0FERUE7RUFDSSxnQkFBQTtBQ0NKOztBREVBO0VBQ0ksWUFBQTtFQUNBLGdCQUFBO0VBQ0EsZ0JBQUE7RUFDQSxnQ0FBQTtFQUNBLGVBQUE7QUNDSjs7QURFQTs7RUFFSSxnQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7RUFDQSxnQkFBQTtBQ0NKOztBREVBO0VBQ0ksa0JBQUE7RUFDQSxpQkFBQTtFQUNBLFlBQUE7RUFDQSxnQkFBQTtBQ0NKIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vc2lnbnVwL3NpZ251cC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5wYW5lbC5wYW5lbC1kZWZhdWx0IHtcbiAgICBwYWRkaW5nOiAyOHB4O1xuICAgIG1hcmdpbi1sZWZ0OiA2OHB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDE1LjRweDtcbn1cblxuLnBhcnRuZXItbG9naW4ge1xuICAgIHBhZGRpbmctbGVmdDogMTVweDtcbn1cblxuLnRpdGxlLXBhcnRuZXIge1xuICAgIGZvbnQtd2VpZ2h0OiA2MDA7XG59XG5cbi5pbnB0IHtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogMDtcbiAgICBib3gtc2hhZG93OiBub25lO1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGNkY2RjO1xuICAgIHBhZGRpbmctbGVmdDogMDtcbn1cblxuLmZvcm0tY29udHJvbC5pcy1pbnZhbGlkOmZvY3VzLFxuLndhcy12YWxpZGF0ZWQgLmZvcm0tY29udHJvbDppbnZhbGlkOmZvY3VzIHtcbiAgICBib3gtc2hhZG93OiBub25lO1xufVxuXG4ubWFpbC1hbHJlYWR5LWV4aXN0IHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZy10b3A6IDE2cHg7XG4gICAgY29sb3I6ICNmMDA7XG4gICAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLm1haWwtc2VudCB7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIHBhZGRpbmctdG9wOiAxNnB4O1xuICAgIGNvbG9yOiBncmVlbjtcbiAgICBmb250LXdlaWdodDogNjAwO1xufSIsIi5wYW5lbC5wYW5lbC1kZWZhdWx0IHtcbiAgcGFkZGluZzogMjhweDtcbiAgbWFyZ2luLWxlZnQ6IDY4cHg7XG4gIGJvcmRlci1yYWRpdXM6IDE1LjRweDtcbn1cblxuLnBhcnRuZXItbG9naW4ge1xuICBwYWRkaW5nLWxlZnQ6IDE1cHg7XG59XG5cbi50aXRsZS1wYXJ0bmVyIHtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLmlucHQge1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDA7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZGNkY2RjO1xuICBwYWRkaW5nLWxlZnQ6IDA7XG59XG5cbi5mb3JtLWNvbnRyb2wuaXMtaW52YWxpZDpmb2N1cyxcbi53YXMtdmFsaWRhdGVkIC5mb3JtLWNvbnRyb2w6aW52YWxpZDpmb2N1cyB7XG4gIGJveC1zaGFkb3c6IG5vbmU7XG59XG5cbi5tYWlsLWFscmVhZHktZXhpc3Qge1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIHBhZGRpbmctdG9wOiAxNnB4O1xuICBjb2xvcjogI2YwMDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn1cblxuLm1haWwtc2VudCB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgcGFkZGluZy10b3A6IDE2cHg7XG4gIGNvbG9yOiBncmVlbjtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { registrationParams } from '../../shared/core/models/common.models';\nimport { HttpService } from '../../shared/core/service/http.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { HelperService } from 'src/app/shared/core/service/helper.service';\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\nimport { MerchantRegParams } from '../../shared/core/models/common.models';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  registerForm: FormGroup;\n  merchantRegisterForm: FormGroup;\n  accountType: any;\n  submitted = false;\n  registraionSuccess = false;\n  registrationMsg: any;\n  RegistrationData = new registrationParams();\n  MerchantRegData = new MerchantRegParams();\n  errorMsg: any;\n  successMsg: any;\n  email: any;\n  pass: boolean;\n  category: any;\n  errMsg: string;\n  constructor(private formBuilder: FormBuilder, private httpService: HttpService, private router: Router,\n    private helperService: HelperService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    // tslint:disable-next-line:no-string-literal\n    this.category = this.route.snapshot.params['category'];\n    if (this.category === 'consumer') {\n      this.buildRegistraionForm();\n    }\n    if (this.category === 'merchant') {\n      this.buildMerchantRegistrationForm();\n    }\n    this.registrationMsg = '';\n  }\n\n\n\n  get f() { return this.registerForm.controls; }\n  get g() { return this.merchantRegisterForm.controls; }\n\n  buildRegistraionForm() {\n    this.registerForm = this.formBuilder.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      emailId: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6)]]\n    });\n  }\n  buildMerchantRegistrationForm() {\n    this.merchantRegisterForm = this.formBuilder.group({\n      bpprimaryContactName: ['', Validators.required],\n      bpname: ['', Validators.required],\n      emailId: ['', [Validators.required, Validators.pattern('[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$'),Validators.email]],\n      password: ['', [Validators.required, Validators.pattern('(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[$@$!%*?&])[A-Za-z\\d$@$!%*?&].{8,}')]],\n      bpcity: ['', [Validators.required, Validators.pattern('^[a-zA-Z\\- ]+$')]],\n      bpzipcode: ['', [Validators.required, , Validators.pattern('[0-9]{6}')]],\n      bpwebsite: ['', [Validators.required, Validators.pattern('^(?!:\\/\\/)([a-zA-Z0-9-_]+\\.)*[a-zA-Z0-9][a-zA-Z0-9-_]+\\.[a-zA-Z]{2,11}?$')]]\n    });\n  }\n  onSubmit() {\n    if (this.category === 'consumer') {\n      this.submitted = true;\n      if (this.registerForm.invalid) {\n        return;\n      }\n      this.RegistrationData.emailId = this.registerForm.value.emailId;\n      this.RegistrationData.firstName = this.registerForm.value.firstName;\n      this.RegistrationData.lastName = this.registerForm.value.lastName;\n      this.RegistrationData.password = this.registerForm.value.password;\n      console.log(this.RegistrationData);\n      const x = this.RegistrationData.emailId;\n      const atposition = x.indexOf('@');\n      const dotposition = x.lastIndexOf('.');\n      if (atposition < 1 || dotposition < atposition + 2 || dotposition + 2 >= x.length) {\n        this.errMsg = 'Please enter a valid E-mail address!';\n        return false;\n      }\n      this.httpService.postCreateUser(this.RegistrationData).subscribe((response: any) => {\n        console.log(response);\n        if (response.status === 202) {\n          console.log(response.body.statusMessage);\n          this.successMsg = response.body.statusMessage;\n          this.email = response.body.responseData.emailId;\n          this.helperService.setToLocalStorage('email', this.email);\n          this.pass = true;\n          // this.router.navigate(['/auth/complete']);\n        }\n      }, error => {\n        console.log(error);\n        this.errorMsg = error.error.statusMessage;\n        console.log(this.errorMsg);\n      });\n    }\n    if (this.category === 'merchant') {\n      this.submitted = true;\n      if (this.merchantRegisterForm.invalid) {\n        return;\n      }\n      this.MerchantRegData.bpprimaryContactName = this.merchantRegisterForm.value.bpprimaryContactName;\n      this.MerchantRegData.bpname = this.merchantRegisterForm.value.bpname;\n      this.MerchantRegData.emailId = this.merchantRegisterForm.value.emailId;\n      this.MerchantRegData.password = this.merchantRegisterForm.value.password;\n      this.MerchantRegData.bpcity = this.merchantRegisterForm.value.bpcity;\n      this.MerchantRegData.bpzipcode = this.merchantRegisterForm.value.bpzipcode;\n      this.MerchantRegData.bpwebsite = this.merchantRegisterForm.value.bpwebsite;\n      console.log(this.MerchantRegData);\n      // Email Id  Validation\n      if (this.MerchantRegData.emailId !== '') {\n        const x = this.MerchantRegData.emailId;\n        const atposition = x.indexOf('@');\n        const dotposition = x.lastIndexOf('.');\n        if (atposition < 1 || dotposition < atposition + 2 || dotposition + 2 >= x.length) {\n          this.errMsg = 'Please enter a valid E-mail address!';\n          return false;\n        }\n      }\n      // Zip code Validation\n      // if (this.MerchantRegData.bpzipcode !== '') {\n      //   const check = /^\\d{6}$|^\\d{5}$/;\n      //   if (!check.test(this.MerchantRegData.bpzipcode)) {\n      //     this.errMsg = 'Enter Valid Zip Code';\n      //     return false;\n      //   }\n      // }\n      this.httpService.postMerchantCreateUser(this.MerchantRegData).subscribe((response: any) => {\n        console.log(response);\n        if (response.status === 200) {\n          this.router.navigate(['/auth/login']);\n        }\n      }, error => {\n        console.log(error);\n        this.errorMsg = error.error.message;\n        console.log(this.errorMsg);\n      });\n    }\n  }\n  get primEmail(){\n    return this.merchantRegisterForm.get('emailId')\n    }\n\n  get passVal(){\n      return this.merchantRegisterForm.get('password')\n      }\n  get zipVal(){\n        return this.merchantRegisterForm.get('bpzipcode')\n        }\n  get webVal(){\n          return this.merchantRegisterForm.get('bpwebsite')\n          }\n  get cityVal(){\n            return this.merchantRegisterForm.get('bpcity')\n            }\n}\n"],"sourceRoot":"webpack:///"}